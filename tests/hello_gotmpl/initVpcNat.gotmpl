kind: Vpc
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-vpc
spec:
  namespaces:
    - {{.Namespace}}
  staticRoutes:
    - cidr: 0.0.0.0/0
      nextHopIP: 172.65.0.254			# vpc 静态路由，自定义 vpc 内流量的下一跳
      policy: policyDst
  enableExternal: true

---

kind: Subnet
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-net
spec:
  dhcpV4Options: >-
    lease_time=3600,router=172.65.0.1,server_id=169.254.0.254,server_mac=00:00:00:2E:2F:B8
  enableDHCP: true
  enableIPv6RA: true
  vpc: {{.Namespace}}-vpc
  cidrBlock: 172.65.0.0/16
  protocol: IPv4
  excludeIps:
    - 172.65.0.1
  gateway: 172.65.0.1
  gatewayType: distributed
  private: false
  namespaces:
    - {{.Namespace}}

---
apiVersion: kubeovn.io/v1
kind: Subnet
metadata:
  name: ovn-vpc-external-network
spec:
  protocol: IPv4
  provider: ovn-vpc-external-network.kube-system
  cidrBlock: 192.168.239.0/24 # 外部网络的网段
  gateway: 192.168.239.1  # 外部网络的物理网关的地址
  excludeIps:
    - 192.168.239.1..192.168.239.100
---
apiVersion: "k8s.cni.cncf.io/v1"
kind: NetworkAttachmentDefinition
metadata:
  name: ovn-vpc-external-network
  namespace: kube-system
spec:
  config: '{
      "cniVersion": "0.3.0",
      "type": "macvlan",
      "master": "eth0",
      "mode": "bridge",
      "ipam": {
        "type": "kube-ovn",
        "server_socket": "/run/openvswitch/kube-ovn-daemon.sock",
        "provider": "ovn-vpc-external-network.kube-system"
      }
    }'

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn-vpc-nat-config
  namespace: kube-system
data:
  image: 'docker.io/kubeovn/vpc-nat-gateway:v1.12.3'
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: ovn-vpc-nat-gw-config
  namespace: kube-system
data:
  enable-vpc-nat-gw: 'true'

---
kind: VpcNatGateway
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-gw
spec:
  vpc: {{.Namespace}}-vpc
  subnet: {{.Namespace}}-net
  lanIp: 172.65.0.254
  selector:
    - "kubernetes.io/os: linux"
  externalSubnets:
    - ovn-vpc-external-network

---
kind: IptablesEIP
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-eip
spec:
  natGwDp: {{.Namespace}}-gw
#  v4ip: 192.168.239.203
#  externalSubnet: ovn-vpc-external-network

---
kind: IptablesFIPRule
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-fip
spec:
  eip: {{.Namespace}}-eip
  internalIp: 172.65.0.200

---
kind: IptablesSnatRule
apiVersion: kubeovn.io/v1
metadata:
  name: {{.Namespace}}-snat
spec:
  eip: {{.Namespace}}-eip
  internalCIDR: 172.65.0.0/16

---
apiVersion: kubeovn.io/v1
kind: SecurityGroup
metadata:
  name: {{.Namespace}}-sg
#spec:
#  allowSameGroupTraffic: true
#  egressRules:
#    - ipVersion: ipv4
#      policy: allow
#      priority: 1
#      protocol: all
#      remoteAddress: 172.65.0.1
#      remoteType: address
#  ingressRules:
#    - ipVersion: ipv4
#      policy: allow
#      priority: 1
#      protocol: icmp
#      remoteAddress: 172.65.0.1
#      remoteType: address

---
apiVersion: v1
kind: Pod                         # 网络初始化调试的Pod
metadata:
  name: {{.Namespace}}-test-nginx
  namespace: {{.Namespace}}
  annotations:
    ovn.kubernetes.io/logical_switch: {{.Namespace}}-net
    ovn.kubernetes.io/port_security: "true"
    ovn.kubernetes.io/security_groups: {{.Namespace}}-sg
#    k8s.v1.cni.cncf.io/networks: kube-system/ovn-vpc-external-network
spec:
  containers:
    - name: nginx
      image: nginx:alpine
      ports:
        - containerPort: 80